#include<bits/stdc++.h>
using namespace std;
#define int            long long
#define pb             push_back
#define el             '\n'
#define pp             pair<int,pair<int,int>>
#define asort(a,n)     sort(a,a+n) 
#define vsort(v)       sort(v.begin(),v.end())
#define vrsort(v)      sort(v.rbegin(),v.rend());
const int N = 999999;
vector<int>arr[N];
int vis[N];
int par[N];
map<pair<int,int>,int>mp;
void edm()
{
    ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
}
int dijstra(int s,int d)
{
    vector<int>dist(100005,1e18);
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
    pq.push({0,s});
    dist[s]=0;
    while(!pq.empty())
    {
        auto curnode = pq.top();
        pq.pop();
        for(auto i:arr[curnode.second])
        {
            if(dist[i] > dist[curnode.second] + mp[{curnode.second,i}]);
            {
                dist[i] = dist[curnode.second] + mp[{curnode.second,i}];
                pq.push({dist[i],i});
            }
        }
    }
    return dist[d];
}
void solve()
{
    int n,m;cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int a,b,c;cin>>a>>b>>c;
        pair<int,int>p;
        p.first=a;
        p.second=b;
        mp.insert({p,c});
        arr[a].pb(b);
        //arr[b].push_back(a);
    }
    /*for(auto it:mp)
    {
        cout<<it.first.first<<" "<<it.first.second<<" "<<it.second<<endl;
    }*/
    int s,d;cin>>s>>d;
    int dd = dijstra(s,d);
    if(dd==1e18)cout<<"NO"<<endl;
    else cout<<dd<<endl;
    for(int i=0;i<=100005;i++)
    {
        arr[i].clear();
    }
    mp.clear();
}
signed main()
{
    edm();
    int t = 1;
    cin>>t;
    for(int i=1;i<=t;i++)
    {
        ///cout<<"Case "<<i<<": ";
        solve();
    }
} 
